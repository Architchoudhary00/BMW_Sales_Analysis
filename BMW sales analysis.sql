#Display all unique BMW models available in the dataset.
SELECT DISTINCT Model
FROM bmw_sales;

#Find the total number of records in the dataset.
SELECT COUNT(*) AS total_records
FROM bmw_sales;

#Show total number of cars sold per year.
SELECT 
    Year,
    SUM(Sales_Volume) AS total_units_sold
FROM bmw_sales
GROUP BY Year
ORDER BY Year;

#Find the average price of each BMW model.
SELECT 
    Model,
    ROUND(AVG(Price_USD), 2) AS avg_price
FROM bmw_sales
GROUP BY Model
ORDER BY avg_price DESC;

#Display total number of cars sold based on fuel type.
SELECT 
    Fuel_Type,
    SUM(Sales_Volume) AS total_units
FROM bmw_sales
GROUP BY Fuel_Type
ORDER BY total_units DESC;

#Identify the best-selling model in each year.
SELECT Year, Model, total_sales
FROM (
    SELECT 
        Year,
        Model,
        SUM(Sales_Volume) AS total_sales,
        ROW_NUMBER() OVER (PARTITION BY Year ORDER BY SUM(Sales_Volume) DESC) AS rnk
    FROM bmw_sales
    GROUP BY Year, Model
) t
WHERE rnk = 1;

#Calculate the average price for each combination of transmission type and fuel type.
SELECT 
    Transmission,
    Fuel_Type,
    ROUND(AVG(Price_USD), 2) AS avg_price
FROM bmw_sales
GROUP BY Transmission, Fuel_Type
ORDER BY avg_price DESC;

#Find the total revenue generated by each region.
SELECT 
    Region,
    ROUND(SUM(Price_USD * Sales_Volume), 2) AS total_revenue
FROM bmw_sales
GROUP BY Region
ORDER BY total_revenue DESC;

#Find the top 5 years with the highest sales volume.
SELECT 
    Year,
    SUM(Sales_Volume) AS total_sales
FROM bmw_sales
GROUP BY Year
ORDER BY total_sales DESC
LIMIT 5;

#Show the average engine size for each model.
SELECT 
    Model,
    ROUND(AVG(Engine_Size_L), 2) AS avg_engine_size
FROM bmw_sales
GROUP BY Model
ORDER BY avg_engine_size DESC;

#Find the most popular car color in each region.
WITH color_counts AS (
  SELECT Region, Color, COUNT(*) AS color_count
  FROM bmw_sales
  GROUP BY Region, Color
)
SELECT Region, Color, color_count
FROM (
  SELECT 
    Region,
    Color,
    color_count,
    ROW_NUMBER() OVER (PARTITION BY Region ORDER BY color_count DESC) AS rn
  FROM color_counts
) t
WHERE rn = 1;


#Classify each car as “Budget”, “Mid-range”, or “Premium” based on price.
SELECT 
    Model,
    CASE 
        WHEN Price_USD < 40000 THEN 'Budget'
        WHEN Price_USD BETWEEN 40000 AND 80000 THEN 'Mid-range'
        ELSE 'Premium'
    END AS price_category,
    COUNT(*) AS cars_count
FROM bmw_sales
GROUP BY Model, price_category
ORDER BY cars_count DESC;

#Find average mileage and average price grouped by sales classification.
SELECT 
    Sales_Classification,
    ROUND(AVG(Mileage_KM), 0) AS avg_mileage,
    ROUND(AVG(Price_USD), 2) AS avg_price
FROM bmw_sales
GROUP BY Sales_Classification
ORDER BY avg_price DESC;

#Identify the best performing model in each region based on total revenue.
SELECT Region, Model
FROM (
    SELECT 
        Region,
        Model,
        revenue,
        ROW_NUMBER() OVER (PARTITION BY Region ORDER BY revenue DESC) AS `rank`
    FROM (
        SELECT 
            Region,
            Model,
            SUM(Sales_Volume * Price_USD) AS revenue
        FROM bmw_sales
        GROUP BY Region, Model
    ) AS agg
) AS t
WHERE `rank` = 1;


